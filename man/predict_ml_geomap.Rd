% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trait-ml-model.R
\name{predict_ml_geomap}
\alias{predict_ml_geomap}
\title{Predict values on a map}
\usage{
predict_ml_geomap(model.dat, spat.raster, ...)
}
\arguments{
\item{model.dat}{A machine learning model object returned by \code{microgeo::create_ml_model()}.}

\item{spat.raster}{A `SpatRaster` object used as prediction variables. Variable names in such a `SpatRaster` should be
same as those in ML modeling (<x.data>).}

\item{...}{Parameters parsed by \code{terra::predict()}.}
}
\value{
A `SpatRaster`.
}
\description{
This function is implemented to predict the value on a geographic map based on the machine learning model
created by \code{microgeo::create_ml_model()()}. The results generated by this function can be saved into a file using
\code{terra::writeRaster()}. See \code{terra::writeRaster()} for more details.
}
\examples{
# Create a microgeo dataset
data(qtp)
showtext::showtext_auto(enable = TRUE)
map <- read_aliyun_map(adcode = c(540000, 630000, 510000))
dataset.dts <- create_dataset(mat = qtp$asv, ant = qtp$tax, met = qtp$met, map = map,
                              phy = qtp$tre, env = qtp$env, lon = "longitude", lat = "latitude")
dataset.dts \%>\% show_dataset()

# Download aridity index and 19 historical bioclimatic variables
dataset.dts \%<>\% get_ai(out.dir = "test/microgeo_data") # Aridity index
dataset.dts \%<>\% get_his_bioc(res = 2.5, out.dir = "test/microgeo_data")
dataset.dts \%<>\% get_fut_bioc(res = 2.5, out.dir = "test/microgeo_data", gcm = "BCC-CSM2-MR")
dataset.dts \%<>\% get_modis_cla_metrics(username = "bioape.lichaonan", password = "Lichaonan@19910905", out.dir = "test/microgeo_data")
dataset.dts \%<>\% extract_data_from_spatraster(type = 'his')

# Tidy up microgeo dataset
dataset.dts \%<>\% rarefy_count_table()
dataset.dts \%<>\% tidy_dataset()
dataset.dts \%>\% show_dataset()

# Calculate the relative abundance and the ecologycal markers at `Family` level
dataset.dts \%<>\% calc_rel_abund()
dataset.dts \%<>\% calc_markers(use.dat = 'spa', use.var = 'AI', annotation.level = 'Family', r.thres = 0.3)
head(dataset.dts$abd$mar$correlation)

# Create a regression random forest model for soil pH
rf.rst.reg <- create_ml_model(y.data = dataset.dts$env,
                              x.data = dataset.dts$spa$tabs[,paste0("Bio", seq(19))], var = 'pH', method = 'rf')
rf.rst.reg \%>\% evaluate_ml_model()

# Predict soil pH using 19 historically bioclimatic variables
rf.rst.reg.pred.his <- rf.rst.reg \%>\%
    predict_ml_geomap(spat.raster = dataset.dts$spa$rast$his[[paste0("Bio", seq(19))]])
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.reg.pred.his) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()

# Mask the results by using Grasslands(10) and Barren(16)
rf.rst.reg.pred.his.masked.gb <- mask_spatraster_by_cla(tar.spat = rf.rst.reg.pred.his,
                                                        ref.spat = dataset.dts$spa$rast$cla$LC_Type1,
                                                        use.class = c(10, 16))
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.reg.pred.his.masked.gb) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()

# Mask the results by using Grasslands(10)
rf.rst.reg.pred.his.masked.g <- mask_spatraster_by_cla(tar.spat = rf.rst.reg.pred.his,
                                                       ref.spat = dataset.dts$spa$rast$cla$LC_Type1,
                                                       use.class = 10)
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.reg.pred.his.masked.g) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()

# Mask the results by using Forest (1,2,3,4,5)
rf.rst.reg.pred.his.masked.f <- mask_spatraster_by_cla(tar.spat = rf.rst.reg.pred.his,
                                                       ref.spat = dataset.dts$spa$rast$cla$LC_Type1,
                                                       use.class = c(1,2,3,4,5))
dataset.dts$map \%>\% plot_bmap(bg.color = "gray40", gd.color = "white") \%>\%
    add_spatraster(spat.raster = rf.rst.reg.pred.his.masked.f, border.color = 'white', border.size = 1) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()

# Predict soil pH using 19 future bioclimatic variables [`BCC-CSM2-MR|ssp585|2061-2080`]
rf.rst.reg.pred.fut <- rf.rst.reg \%>\%
    predict_ml_geomap(spat.raster = dataset.dts$spa$rast$fut$`BCC-CSM2-MR|ssp585|2061-2080`)
plot_bmap(map = dataset.dts$map) \%>\%
    add_spatraster(spat.raster = rf.rst.reg.pred.fut) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()

# Create a binary classification random forest model for the family of f__A21b
family.bins <- data.frame(row.names = rownames(dataset.dts$abd$mar$abundance),
                          f__A21b = dataset.dts$abd$mar$abundance$f__A21b)
family.bins$f__A21b <- ifelse(family.bins$f__A21b > 0, "presence", "absence") # two classifications
family.bins$f__A21b <- as.factor(family.bins$f__A21b)
rf.rst.cla.bin <- create_ml_model(y.data = family.bins,
                                  x.data = dataset.dts$spa$tabs[,paste0("Bio", seq(19))],
                                  var = 'f__A21b', method = 'rf', type = 'classification')
rf.rst.cla.bin \%>\% evaluate_ml_model()

# Predict the presence/absence probability of family f__A21b using 19 historically bioclimatic variables
rf.rst.cla.bin.pred.his <- rf.rst.cla.bin \%>\%
    predict_ml_geomap(spat.raster = dataset.dts$spa$rast$his[[paste0("Bio", seq(19))]])
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.bin.pred.his$presence) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.bin.pred.his$absence) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()

# Predict the presence/absence probability of family f__A21b
# using 19 future bioclimatic variables [`BCC-CSM2-MR|ssp585|2061-2080`]
rf.rst.cla.bin.pred.fut <- rf.rst.cla.bin \%>\%
    predict_ml_geomap(spat.raster = dataset.dts$spa$rast$fut$`BCC-CSM2-MR|ssp585|2061-2080`)
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.bin.pred.fut$presence) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.bin.pred.fut$absence) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()

# Create a mutiple class classification random forest model for the family of f__A21b
family.mutiple <- data.frame(row.names = rownames(dataset.dts$abd$mar$abundance),
                             f__A21b = dataset.dts$abd$mar$abundance$f__A21b)
family.mutiple$f__A21b <- cut(family.mutiple$f__A21b, breaks = c(-Inf, 0.05, 0.2, 0.9, Inf),
                              labels = c("H", "A", "S", "Y")) # four classifications
family.mutiple$f__A21b <- as.factor(family.mutiple$f__A21b) # must convert the classification to factor
rf.rst.cla.mutiple <- create_ml_model(y.data = family.mutiple,
                                      x.data = dataset.dts$spa$tabs[,paste0("Bio", seq(19))],
                                      var = 'f__A21b', method = 'rf', type = 'classification')
rf.rst.cla.mutiple \%>\% evaluate_ml_model()

# Predict the probability of each classification for family f__A21b using 19 historically bioclimatic variables
rf.rst.cla.mutiple.pred.his <- rf.rst.cla.mutiple \%>\%
    predict_ml_geomap(spat.raster = dataset.dts$spa$rast$his[[paste0("Bio", seq(19))]])
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.mutiple.pred.his$H) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.mutiple.pred.his$A) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.mutiple.pred.his$S) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.mutiple.pred.his$Y) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()

# Predict the probability of each classification for family f__A21b
# using 19 future bioclimatic variables [`BCC-CSM2-MR|ssp585|2061-2080`]
rf.rst.cla.mutiple.pred.fut <- rf.rst.cla.mutiple \%>\%
    predict_ml_geomap(spat.raster = dataset.dts$spa$rast$fut$`BCC-CSM2-MR|ssp585|2061-2080`)
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.mutiple.pred.fut$H) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.mutiple.pred.fut$A) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.mutiple.pred.fut$S) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = rf.rst.cla.mutiple.pred.fut$Y) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()

# Save the predicted result info file. Just an example
print(rf.rst.cla.mutiple.pred.fut)
terra::writeRaster(rf.rst.cla.mutiple.pred.fut, file = 'test/rf.rst.cla.mutiple.pred.fut.tif')
}
\seealso{
\code{\link[terra:predict]{terra::predict()}}
\code{\link[terra:writeRaster]{terra::writeRaster()}}
\code{\link[microgeo:create_ml_model]{microgeo::create_ml_model()}}
\code{\link[microgeo:evaluate_ml_model]{microgeo::evaluate_ml_model()}}
\code{\link[microgeo:read_aliyun_map]{microgeo::read_aliyun_map()}}
\code{\link[microgeo:create_dataset]{microgeo::create_dataset()}}
\code{\link[microgeo:show_dataset]{microgeo::show_dataset()}}
\code{\link[microgeo:get_ai]{microgeo::get_ai()}}
\code{\link[microgeo:get_his_bioc]{microgeo::get_his_bioc()}}
\code{\link[microgeo:get_fut_bioc]{microgeo::get_fut_bioc()}}
\code{\link[microgeo:get_modis_cla_metrics]{microgeo::get_modis_cla_metrics()}}
\code{\link[microgeo:extract_data_from_spatraster]{microgeo::extract_data_from_spatraster()}}
\code{\link[microgeo:rarefy_count_table]{microgeo::rarefy_count_table()}}
\code{\link[microgeo:tidy_dataset]{microgeo::tidy_dataset()}}
\code{\link[microgeo:calc_rel_abund]{microgeo::calc_rel_abund()}}
\code{\link[microgeo:calc_markers]{microgeo::calc_markers()}}
\code{\link[microgeo:mask_spatraster_by_cla]{microgeo::mask_spatraster_by_cla()}}
\code{\link[microgeo:plot_bmap]{microgeo::plot_nmap()}}
\code{\link[microgeo:add_spatraster]{microgeo::add_spatraster()}}
\code{\link[microgeo:add_label]{microgeo::add_label()}}
\code{\link[microgeo:add_north_arrow]{microgeo::add_north_arrow()}}
\code{\link[microgeo:add_scale_bar]{microgeo::add_scale_bar()}}
\code{\link[microgeo:add_crs]{microgeo::add_crs()}}
}
\author{
Li Chaonan (Ecological Security and Protection Key Laboratory of Sichuan Province, Mianyang Normal University)
}
