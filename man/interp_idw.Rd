% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trait-interp-model.R
\name{interp_idw}
\alias{interp_idw}
\title{Inverse distance weighting (IDW) interpolation}
\usage{
interp_idw(
  map,
  met,
  dat,
  var,
  grid.step = 0.1,
  type = c("regular", "hexagonal"),
  n = 50000,
  cellsize = 1,
  idp = 2,
  trim.dup = FALSE,
  ...
)
}
\arguments{
\item{map}{A `SpatialPolygonsDataFrame` of geographic map.}

\item{met}{A `data.frame` of sample information. Row names should be sample ids and the column names must be variables
(e.g., `longitude`, `latitude` and `group`). Longitude and latitude must be included in this `data.frame` as we mainly
focus on the spatial patterns of microbial traits.}

\item{dat}{A `data.frame` containing the variables to be interpolated.}

\item{var}{Name of variable to be interpolated.}

\item{grid.step}{Step for grid expanding (minutes of a degree). Default is `0.1`.}

\item{type}{Please select one from `regular` and `hexagonal`. `regular` for regular (systematically aligned) sampling,
while `hexagonal` for sampling on a hexagonal lattice. Default is `regular`. See \code{sp::spsample()} for details.}

\item{n}{Approximate sample size. A large value represents a high resolution. Only work when `type='regular'`. Default
is `50000`. See \code{sp::spsample()} for more details.}

\item{cellsize}{Cell size. Only work when `type='hexagonal'` Default is `1`. See \code{sp::spsample()} for details.}

\item{idp}{Specify the inverse distance weighting power. Default is `2`. See \code{gstat::idw()} for details.}

\item{trim.dup}{Whether to randomly remove sampling sites with duplicated coordinates? Default is `FALSE`.}

\item{...}{Parameters parsed by \code{gstat::idw()}.}
}
\value{
A `SpatRaster` if the <type> is `regular`; An R `list` with the following components if the <type> is `hexagonal`.
\describe{
  \item{\code{object$res}}{Data for ggplot2 visualization.}
  \item{\code{object$var}}{Name of interpolated variable.}
  \item{\code{object$type}}{Type of interpolation, which is `'idw_hex'`.}
}
}
\description{
This function is implemented to perform the inverse distance weighting (IDW) interpolation.
}
\examples{
# Create a microgeo dataset
data(qtp)
showtext::showtext_auto(enable = TRUE)
map <- read_aliyun_map(adcode = c(540000, 630000, 510000))
dataset.dts <- create_dataset(mat = qtp$asv, ant = qtp$tax, met = qtp$met, map = map,
                              phy = qtp$tre, env = qtp$env, lon = "longitude", lat = "latitude")
dataset.dts \%>\% show_dataset()

# Tidy microgeo dataset, and calculate microbial alpha diversity indices
dataset.dts \%<>\% rarefy_count_table()
dataset.dts \%<>\% tidy_dataset()
dataset.dts \%<>\% calc_alpha_div(measures = c("observed", "shannon"))
dataset.dts \%>\% show_dataset()

# Inverse distance weighting (IDW) interpolation for alpha diversity indices(type = 'regular')
idw.rst.observed <- interp_idw(map = dataset.dts$map, met = dataset.dts$met,
                               dat = dataset.dts$div$alpha, var = 'observed',
                               type = 'regular', trim.dup = TRUE)
idw.rst.shannon  <- interp_idw(map = dataset.dts$map, met = dataset.dts$met,
                               dat = dataset.dts$div$alpha, var = 'shannon',
                               type = 'regular', trim.dup = TRUE)

# Visualize the interpolated results
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = idw.rst.observed) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
dataset.dts$map \%>\% plot_bmap() \%>\%
    add_spatraster(spat.raster = idw.rst.observed) \%>\%
    add_label(dat = dataset.dts$map@data, lab.var = 'NAME', lon.var = "X.CENTER", lat.var = "Y.CENTER") \%>\%
    add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()

# Inverse distance weighting (IDW) interpolation for alpha diversity indices (type = 'hexagonal')
observed.hex <- interp_idw(map = dataset.dts$map, met = dataset.dts$met,
                           dat = dataset.dts$div$alpha, var = 'observed',
                           type = 'hexagonal', trim.dup = TRUE)
shannon.hex <- interp_idw(map = dataset.dts$map, met = dataset.dts$met,
                          dat = dataset.dts$div$alpha, var = 'shannon',
                          type = 'hexagonal', trim.dup = TRUE)

# Visualize the interpolated results
observed.hex \%>\% plot_imap() \%>\% add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
shannon.hex \%>\% plot_imap() \%>\% add_scale_bar() \%>\% add_north_arrow() \%>\% add_crs()
}
\seealso{
\code{\link[sp:spsample]{sp::spsample()}}
\code{\link[gstat:idw]{gstat::idw()}}
\code{\link[microgeo:read_aliyun_map]{microgeo::read_aliyun_map()}}
\code{\link[microgeo:create_dataset]{microgeo::create_dataset()}}
\code{\link[microgeo:show_dataset]{microgeo::show_dataset()}}
\code{\link[microgeo:rarefy_count_table]{microgeo::rarefy_count_table()}}
\code{\link[microgeo:tidy_dataset]{microgeo::tidy_dataset()}}
\code{\link[microgeo:calc_alpha_div]{microgeo::calc_alpha_div()}}
\code{\link[microgeo:plot_bmap]{microgeo::plot_bmap()}}
\code{\link[microgeo:plot_imap]{microgeo::plot_bmap()}}
\code{\link[microgeo:add_spatraster]{microgeo::add_spatraster()}}
\code{\link[microgeo:add_label]{microgeo::add_label()}}
\code{\link[microgeo:add_north_arrow]{microgeo::add_north_arrow()}}
\code{\link[microgeo:add_scale_bar]{microgeo::add_scale_bar()}}
\code{\link[microgeo:add_crs]{microgeo::add_crs()}}
}
\author{
Li Chaonan (Ecological Security and Protection Key Laboratory of Sichuan Province, Mianyang Normal University)
}
